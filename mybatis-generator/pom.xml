<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <parent>
        <groupId>com.lyp.mt</groupId>
        <artifactId>mytools</artifactId>
        <version>1.0-SNAPSHOT</version>
    </parent>
    <modelVersion>4.0.0</modelVersion>

    <artifactId>mybatis-generator</artifactId>

    <properties>
        <java.version>1.8</java.version>
        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
        <project.reporting.outputEncoding>UTF-8</project.reporting.outputEncoding>
        <maven.compiler.source>${java.version}</maven.compiler.source>
        <maven.compiler.target>${java.version}</maven.compiler.target>
    </properties>


    <dependencies>


        <!-- 添加逆向工程生成包中用到的mybatis依赖 -->
        <dependency>
            <groupId>org.mybatis</groupId>
            <artifactId>mybatis</artifactId>
            <version>3.5.2</version>
        </dependency>

        <dependency>
            <groupId>org.projectlombok</groupId>
            <artifactId>lombok</artifactId>
            <version>1.18.8</version>
        </dependency>

        <dependency>
            <groupId>junit</groupId>
            <artifactId>junit</artifactId>
            <version>4.12</version>
            <scope>test</scope>
        </dependency>

        <!-- junit 5 单元测试依赖 start     -->
        <dependency>
            <groupId>org.junit.platform</groupId>
            <artifactId>junit-platform-launcher</artifactId>
            <version>1.3.2</version>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.junit.jupiter</groupId>
            <artifactId>junit-jupiter-engine</artifactId>
            <version>5.3.2</version>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.junit.vintage</groupId>
            <artifactId>junit-vintage-engine</artifactId>
            <version>5.3.2</version>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.junit.jupiter</groupId>
            <artifactId>junit-jupiter-api</artifactId>
            <version>5.3.2</version>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.junit.jupiter</groupId>
            <artifactId>junit-jupiter-params</artifactId>
            <version>5.3.2</version>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.testng</groupId>
            <artifactId>testng</artifactId>
            <version>7.0.0</version>
            <scope>compile</scope>
        </dependency>
        <!-- junit 5 单元测试依赖 end     -->

        <!--  ======== 生成字段注释需要的依赖  开始  ===-->
        <dependency>
            <groupId>org.mybatis.generator</groupId>
            <artifactId>mybatis-generator-core</artifactId>
            <version>1.3.7</version>
        </dependency>
        <!--  ======= 生成字段注释需要的依赖  结束 =====  -->


    </dependencies>


    <build>

        <plugins>
            <!-- mybatis 逆向工程 maven插件包 自动生成代码插件 -->
            <plugin>
                <groupId>org.mybatis.generator</groupId>
                <artifactId>mybatis-generator-maven-plugin</artifactId>
                <version>1.3.7</version>
                <configuration>
                    <!-- mybatis-generator的配置文件，根据情况调整位置，默认在resources,可以不配置-->
                    <!-- <configurationFile>src/main/resources/generatorConfig.xml</configurationFile>-->
                    <verbose>true</verbose>
                    <!-- 是否覆盖，true表示会替换生成的JAVA文件，false则不覆盖 -->
                    <overwrite>true</overwrite>
                </configuration>
                <dependencies>
                    <!-- java连接mysql驱动包 -->
                    <dependency>
                        <groupId>mysql</groupId>
                        <artifactId>mysql-connector-java</artifactId>
                        <version>8.0.16</version>
<!--                        <version>5.1.47</version>-->
                    </dependency>

                    <!--
                    注意：
                    1、所有引用的外部插件(比如分页插件)或者jar包，必须指定依赖
                       比如这里依赖了自己的jar：mf-dao
                       在generator之前，必须先生成jar并存放在本地仓库或私服
                    2、depences下，每个依赖的jar必须指定version
                    3、如果generatorConfig.xml文件使用了自定义的插件，在指定依赖前，请先编译，确定生成了jar包（不然会报错提示无法初始化该对象）
                    4、如果generatorConfig.xml没有放在resources下，请指定generatorConfig.xml配置文件的路径
                    -->
                    <!--自定义注解必须放到插件自身的依赖里才能访问到，因此需要先把当前项目打包到本地，否则会报找不到Class的错误
                    mybatis-generator 的plugin有自己的classpath，我们在项目中直接继承的类和plugin不属于同一个classpath。这一点在官方文档有一点提到-->
                    <dependency>
                        <groupId>com.lyp.mt</groupId>
                        <artifactId>mybatis-generator</artifactId>
                        <version>1.0-SNAPSHOT</version>
                    </dependency>
                </dependencies>

            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-compiler-plugin</artifactId>
                <configuration>
                    <source>8</source>
                    <target>8</target>
                </configuration>
            </plugin>

        </plugins>
    </build>
</project>