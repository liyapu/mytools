<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.tusdao.mapper.base.DownloadAreaMapper">
  <resultMap id="BaseResultMap" type="com.tusdao.entity.base.DownloadArea">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="type" jdbcType="TINYINT" property="type" />
    <result column="origin_name" jdbcType="VARCHAR" property="originName" />
    <result column="top" jdbcType="TINYINT" property="top" />
    <result column="top_time" jdbcType="TIMESTAMP" property="topTime" />
    <result column="file_size" jdbcType="VARCHAR" property="fileSize" />
    <result column="file_desc" jdbcType="VARCHAR" property="fileDesc" />
    <result column="relative_path" jdbcType="VARCHAR" property="relativePath" />
    <result column="absolute_path" jdbcType="VARCHAR" property="absolutePath" />
    <result column="uuid" jdbcType="VARCHAR" property="uuid" />
    <result column="valid" jdbcType="TINYINT" property="valid" />
    <result column="create_time" jdbcType="TIMESTAMP" property="createTime" />
    <result column="update_time" jdbcType="TIMESTAMP" property="updateTime" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    id, `type`, origin_name, `top`, top_time, file_size, file_desc, relative_path, absolute_path, 
    uuid, `valid`, create_time, update_time
  </sql>
  <select id="selectByExample" parameterType="com.tusdao.entity.base.DownloadAreaExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from download_area
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from download_area
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from download_area
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.tusdao.entity.base.DownloadAreaExample">
    delete from download_area
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.tusdao.entity.base.DownloadArea">
    <selectKey keyProperty="id" order="AFTER" resultType="java.lang.Integer">
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into download_area (`type`, origin_name, `top`, 
      top_time, file_size, file_desc, 
      relative_path, absolute_path, uuid, 
      `valid`, create_time, update_time
      )
    values (#{type,jdbcType=TINYINT}, #{originName,jdbcType=VARCHAR}, #{top,jdbcType=TINYINT}, 
      #{topTime,jdbcType=TIMESTAMP}, #{fileSize,jdbcType=VARCHAR}, #{fileDesc,jdbcType=VARCHAR}, 
      #{relativePath,jdbcType=VARCHAR}, #{absolutePath,jdbcType=VARCHAR}, #{uuid,jdbcType=VARCHAR}, 
      #{valid,jdbcType=TINYINT}, #{createTime,jdbcType=TIMESTAMP}, #{updateTime,jdbcType=TIMESTAMP}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.tusdao.entity.base.DownloadArea">
    <selectKey keyProperty="id" order="AFTER" resultType="java.lang.Integer">
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into download_area
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="type != null">
        `type`,
      </if>
      <if test="originName != null">
        origin_name,
      </if>
      <if test="top != null">
        `top`,
      </if>
      <if test="topTime != null">
        top_time,
      </if>
      <if test="fileSize != null">
        file_size,
      </if>
      <if test="fileDesc != null">
        file_desc,
      </if>
      <if test="relativePath != null">
        relative_path,
      </if>
      <if test="absolutePath != null">
        absolute_path,
      </if>
      <if test="uuid != null">
        uuid,
      </if>
      <if test="valid != null">
        `valid`,
      </if>
      <if test="createTime != null">
        create_time,
      </if>
      <if test="updateTime != null">
        update_time,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="type != null">
        #{type,jdbcType=TINYINT},
      </if>
      <if test="originName != null">
        #{originName,jdbcType=VARCHAR},
      </if>
      <if test="top != null">
        #{top,jdbcType=TINYINT},
      </if>
      <if test="topTime != null">
        #{topTime,jdbcType=TIMESTAMP},
      </if>
      <if test="fileSize != null">
        #{fileSize,jdbcType=VARCHAR},
      </if>
      <if test="fileDesc != null">
        #{fileDesc,jdbcType=VARCHAR},
      </if>
      <if test="relativePath != null">
        #{relativePath,jdbcType=VARCHAR},
      </if>
      <if test="absolutePath != null">
        #{absolutePath,jdbcType=VARCHAR},
      </if>
      <if test="uuid != null">
        #{uuid,jdbcType=VARCHAR},
      </if>
      <if test="valid != null">
        #{valid,jdbcType=TINYINT},
      </if>
      <if test="createTime != null">
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null">
        #{updateTime,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.tusdao.entity.base.DownloadAreaExample" resultType="java.lang.Long">
    select count(*) from download_area
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update download_area
    <set>
      <if test="record.id != null">
        id = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.type != null">
        `type` = #{record.type,jdbcType=TINYINT},
      </if>
      <if test="record.originName != null">
        origin_name = #{record.originName,jdbcType=VARCHAR},
      </if>
      <if test="record.top != null">
        `top` = #{record.top,jdbcType=TINYINT},
      </if>
      <if test="record.topTime != null">
        top_time = #{record.topTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.fileSize != null">
        file_size = #{record.fileSize,jdbcType=VARCHAR},
      </if>
      <if test="record.fileDesc != null">
        file_desc = #{record.fileDesc,jdbcType=VARCHAR},
      </if>
      <if test="record.relativePath != null">
        relative_path = #{record.relativePath,jdbcType=VARCHAR},
      </if>
      <if test="record.absolutePath != null">
        absolute_path = #{record.absolutePath,jdbcType=VARCHAR},
      </if>
      <if test="record.uuid != null">
        uuid = #{record.uuid,jdbcType=VARCHAR},
      </if>
      <if test="record.valid != null">
        `valid` = #{record.valid,jdbcType=TINYINT},
      </if>
      <if test="record.createTime != null">
        create_time = #{record.createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.updateTime != null">
        update_time = #{record.updateTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update download_area
    set id = #{record.id,jdbcType=INTEGER},
      `type` = #{record.type,jdbcType=TINYINT},
      origin_name = #{record.originName,jdbcType=VARCHAR},
      `top` = #{record.top,jdbcType=TINYINT},
      top_time = #{record.topTime,jdbcType=TIMESTAMP},
      file_size = #{record.fileSize,jdbcType=VARCHAR},
      file_desc = #{record.fileDesc,jdbcType=VARCHAR},
      relative_path = #{record.relativePath,jdbcType=VARCHAR},
      absolute_path = #{record.absolutePath,jdbcType=VARCHAR},
      uuid = #{record.uuid,jdbcType=VARCHAR},
      `valid` = #{record.valid,jdbcType=TINYINT},
      create_time = #{record.createTime,jdbcType=TIMESTAMP},
      update_time = #{record.updateTime,jdbcType=TIMESTAMP}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.tusdao.entity.base.DownloadArea">
    update download_area
    <set>
      <if test="type != null">
        `type` = #{type,jdbcType=TINYINT},
      </if>
      <if test="originName != null">
        origin_name = #{originName,jdbcType=VARCHAR},
      </if>
      <if test="top != null">
        `top` = #{top,jdbcType=TINYINT},
      </if>
      <if test="topTime != null">
        top_time = #{topTime,jdbcType=TIMESTAMP},
      </if>
      <if test="fileSize != null">
        file_size = #{fileSize,jdbcType=VARCHAR},
      </if>
      <if test="fileDesc != null">
        file_desc = #{fileDesc,jdbcType=VARCHAR},
      </if>
      <if test="relativePath != null">
        relative_path = #{relativePath,jdbcType=VARCHAR},
      </if>
      <if test="absolutePath != null">
        absolute_path = #{absolutePath,jdbcType=VARCHAR},
      </if>
      <if test="uuid != null">
        uuid = #{uuid,jdbcType=VARCHAR},
      </if>
      <if test="valid != null">
        `valid` = #{valid,jdbcType=TINYINT},
      </if>
      <if test="createTime != null">
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null">
        update_time = #{updateTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.tusdao.entity.base.DownloadArea">
    update download_area
    set `type` = #{type,jdbcType=TINYINT},
      origin_name = #{originName,jdbcType=VARCHAR},
      `top` = #{top,jdbcType=TINYINT},
      top_time = #{topTime,jdbcType=TIMESTAMP},
      file_size = #{fileSize,jdbcType=VARCHAR},
      file_desc = #{fileDesc,jdbcType=VARCHAR},
      relative_path = #{relativePath,jdbcType=VARCHAR},
      absolute_path = #{absolutePath,jdbcType=VARCHAR},
      uuid = #{uuid,jdbcType=VARCHAR},
      `valid` = #{valid,jdbcType=TINYINT},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      update_time = #{updateTime,jdbcType=TIMESTAMP}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>