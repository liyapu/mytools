<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.tusdao.mapper.base.NewsAnnexMapper">
  <resultMap id="BaseResultMap" type="com.tusdao.entity.base.NewsAnnex">
    <id column="annex_id" jdbcType="INTEGER" property="annexId" />
    <result column="news_id" jdbcType="INTEGER" property="newsId" />
    <result column="type" jdbcType="TINYINT" property="type" />
    <result column="origin_name" jdbcType="VARCHAR" property="originName" />
    <result column="relative_path" jdbcType="VARCHAR" property="relativePath" />
    <result column="absolute_path" jdbcType="VARCHAR" property="absolutePath" />
    <result column="status" jdbcType="TINYINT" property="status" />
    <result column="create_time" jdbcType="TIMESTAMP" property="createTime" />
    <result column="update_time" jdbcType="TIMESTAMP" property="updateTime" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    annex_id, news_id, type, origin_name, relative_path, absolute_path, status, create_time, 
    update_time
  </sql>
  <select id="selectByExample" parameterType="com.tusdao.entity.base.NewsAnnexExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from news_annex
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from news_annex
    where annex_id = #{annexId,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from news_annex
    where annex_id = #{annexId,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.tusdao.entity.base.NewsAnnexExample">
    delete from news_annex
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.tusdao.entity.base.NewsAnnex">
    <selectKey keyProperty="annexId" order="AFTER" resultType="java.lang.Integer">
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into news_annex (news_id, type, origin_name, 
      relative_path, absolute_path, status, 
      create_time, update_time)
    values (#{newsId,jdbcType=INTEGER}, #{type,jdbcType=TINYINT}, #{originName,jdbcType=VARCHAR}, 
      #{relativePath,jdbcType=VARCHAR}, #{absolutePath,jdbcType=VARCHAR}, #{status,jdbcType=TINYINT}, 
      #{createTime,jdbcType=TIMESTAMP}, #{updateTime,jdbcType=TIMESTAMP})
  </insert>
  <insert id="insertSelective" parameterType="com.tusdao.entity.base.NewsAnnex">
    <selectKey keyProperty="annexId" order="AFTER" resultType="java.lang.Integer">
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into news_annex
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="newsId != null">
        news_id,
      </if>
      <if test="type != null">
        type,
      </if>
      <if test="originName != null">
        origin_name,
      </if>
      <if test="relativePath != null">
        relative_path,
      </if>
      <if test="absolutePath != null">
        absolute_path,
      </if>
      <if test="status != null">
        status,
      </if>
      <if test="createTime != null">
        create_time,
      </if>
      <if test="updateTime != null">
        update_time,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="newsId != null">
        #{newsId,jdbcType=INTEGER},
      </if>
      <if test="type != null">
        #{type,jdbcType=TINYINT},
      </if>
      <if test="originName != null">
        #{originName,jdbcType=VARCHAR},
      </if>
      <if test="relativePath != null">
        #{relativePath,jdbcType=VARCHAR},
      </if>
      <if test="absolutePath != null">
        #{absolutePath,jdbcType=VARCHAR},
      </if>
      <if test="status != null">
        #{status,jdbcType=TINYINT},
      </if>
      <if test="createTime != null">
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null">
        #{updateTime,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.tusdao.entity.base.NewsAnnexExample" resultType="java.lang.Long">
    select count(*) from news_annex
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update news_annex
    <set>
      <if test="record.annexId != null">
        annex_id = #{record.annexId,jdbcType=INTEGER},
      </if>
      <if test="record.newsId != null">
        news_id = #{record.newsId,jdbcType=INTEGER},
      </if>
      <if test="record.type != null">
        type = #{record.type,jdbcType=TINYINT},
      </if>
      <if test="record.originName != null">
        origin_name = #{record.originName,jdbcType=VARCHAR},
      </if>
      <if test="record.relativePath != null">
        relative_path = #{record.relativePath,jdbcType=VARCHAR},
      </if>
      <if test="record.absolutePath != null">
        absolute_path = #{record.absolutePath,jdbcType=VARCHAR},
      </if>
      <if test="record.status != null">
        status = #{record.status,jdbcType=TINYINT},
      </if>
      <if test="record.createTime != null">
        create_time = #{record.createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.updateTime != null">
        update_time = #{record.updateTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update news_annex
    set annex_id = #{record.annexId,jdbcType=INTEGER},
      news_id = #{record.newsId,jdbcType=INTEGER},
      type = #{record.type,jdbcType=TINYINT},
      origin_name = #{record.originName,jdbcType=VARCHAR},
      relative_path = #{record.relativePath,jdbcType=VARCHAR},
      absolute_path = #{record.absolutePath,jdbcType=VARCHAR},
      status = #{record.status,jdbcType=TINYINT},
      create_time = #{record.createTime,jdbcType=TIMESTAMP},
      update_time = #{record.updateTime,jdbcType=TIMESTAMP}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.tusdao.entity.base.NewsAnnex">
    update news_annex
    <set>
      <if test="newsId != null">
        news_id = #{newsId,jdbcType=INTEGER},
      </if>
      <if test="type != null">
        type = #{type,jdbcType=TINYINT},
      </if>
      <if test="originName != null">
        origin_name = #{originName,jdbcType=VARCHAR},
      </if>
      <if test="relativePath != null">
        relative_path = #{relativePath,jdbcType=VARCHAR},
      </if>
      <if test="absolutePath != null">
        absolute_path = #{absolutePath,jdbcType=VARCHAR},
      </if>
      <if test="status != null">
        status = #{status,jdbcType=TINYINT},
      </if>
      <if test="createTime != null">
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null">
        update_time = #{updateTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    where annex_id = #{annexId,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.tusdao.entity.base.NewsAnnex">
    update news_annex
    set news_id = #{newsId,jdbcType=INTEGER},
      type = #{type,jdbcType=TINYINT},
      origin_name = #{originName,jdbcType=VARCHAR},
      relative_path = #{relativePath,jdbcType=VARCHAR},
      absolute_path = #{absolutePath,jdbcType=VARCHAR},
      status = #{status,jdbcType=TINYINT},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      update_time = #{updateTime,jdbcType=TIMESTAMP}
    where annex_id = #{annexId,jdbcType=INTEGER}
  </update>
</mapper>