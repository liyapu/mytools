<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <parent>
        <artifactId>mytools</artifactId>
        <groupId>com.lyp.mt</groupId>
        <version>1.0-SNAPSHOT</version>
    </parent>
    <modelVersion>4.0.0</modelVersion>

    <artifactId>spockdemo</artifactId>

    <properties>
        <maven.compiler.source>8</maven.compiler.source>
        <maven.compiler.target>8</maven.compiler.target>
        <!-- 模块变量 -->
        <!-- 源文件编码格式 -->
        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
        <!-- 模块默认编译级别 -->
        <compile.default.version>1.8</compile.default.version>
        <!-- client模块编译级别 -->
        <compile.client.version>1.6</compile.client.version>
        <!-- 打包时默认跳过测试 -->
        <skipTests>true</skipTests>
        <mall-sqm-client.version>1.16.37</mall-sqm-client.version>

        <!-- Spock测试依赖的版本 start -->
        <spock.version>1.3-groovy-2.4</spock.version>
        <groovy.version>2.4.21</groovy.version>
        <powermock.version>2.0.4</powermock.version>
        <jmockit.version>1.39</jmockit.version>
        <junitparams.version>1.1.0</junitparams.version>
        <!-- Spock测试依赖的版本 end -->
    </properties>

        <dependencies>
            <!-- 测试用jar依赖 start (以下5个部分)-->
            <!-- 1.测试Spock 相关 -->
            <dependency>
                <groupId>org.spockframework</groupId>
                <artifactId>spock-core</artifactId>
                <version>${spock.version}</version>
                <scope>test</scope>
            </dependency>
            <dependency>
                <groupId>org.spockframework</groupId>
                <artifactId>spock-spring</artifactId>
                <version>${spock.version}</version>
                <scope>test</scope>
            </dependency>

            <!-- 2.测试Groovy 相关 -->
            <dependency>
                <groupId>org.codehaus.groovy</groupId>
                <artifactId>groovy-all</artifactId>
                <type>pom</type>
                <scope>test</scope>
                <version>${groovy.version}</version>
                <exclusions>
                    <exclusion>
                        <artifactId>groovy-test-junit5</artifactId>
                        <groupId>org.codehaus.groovy</groupId>
                    </exclusion>
                    <exclusion>
                        <artifactId>groovy-testng</artifactId>
                        <groupId>org.codehaus.groovy</groupId>
                    </exclusion>
                </exclusions>
            </dependency>

            <!-- 3.测试PowerMock 相关-->
            <dependency>
                <groupId>org.powermock</groupId>
                <artifactId>powermock-module-junit4</artifactId>
                <version>${powermock.version}</version>
                <scope>test</scope>
            </dependency>
            <dependency>
                <groupId>org.powermock</groupId>
                <artifactId>powermock-api-mockito2</artifactId>
                <version>${powermock.version}</version>
                <scope>test</scope>
            </dependency>

            <!-- 4.测试db 相关 -->
            <dependency>
                <groupId>com.h2database</groupId>
                <artifactId>h2</artifactId>
                <version>2.0.206</version>
                <scope>test</scope>
            </dependency>
            <dependency>
                <groupId>org.dbunit</groupId>
                <artifactId>dbunit</artifactId>
                <version>2.5.1</version>
                <scope>test</scope>
            </dependency>
        </dependencies>
    <build>
            <plugins>
                <!-- 测试Plugins Start -->
                <plugin>
                    <groupId>org.codehaus.gmavenplus</groupId>
                    <artifactId>gmavenplus-plugin</artifactId>
                    <version>1.8.1</version>
                    <executions>
                        <execution>
                            <goals>
                                <goal>addSources</goal>
                                <goal>addTestSources</goal>
                                <goal>generateStubs</goal>
                                <goal>compile</goal>
                                <goal>generateTestStubs</goal>
                                <goal>compileTests</goal>
                                <goal>removeStubs</goal>
                                <goal>removeTestStubs</goal>
                            </goals>
                        </execution>
                    </executions>
                </plugin>
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-surefire-plugin</artifactId>
                    <version>3.0.0-M3</version>
                    <configuration>
                        <useFile>false</useFile>
                        <includes>
                            <include>**/*Spec.java</include>
                        </includes>
                        <parallel>methods</parallel>
                        <threadCount>10</threadCount>
                        <testFailureIgnore>true</testFailureIgnore>
                    </configuration>
                </plugin>
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-resources-plugin</artifactId>
                    <version>2.6</version>
                    <executions>
                        <execution>
                            <id>copy-resources</id>
                            <phase>compile</phase>
                            <goals>
                                <goal>copy-resources</goal>
                            </goals>
                            <configuration>
                                <outputDirectory>${basedir}/target/resources</outputDirectory>
                                <resources>
                                    <resource>
                                        <directory>${basedir}/src/main/resources</directory>
                                        <filtering>true</filtering>
                                    </resource>
                                </resources>
                            </configuration>
                        </execution>
                    </executions>
                </plugin>
                <plugin>
                    <groupId>org.jacoco</groupId>
                    <artifactId>jacoco-maven-plugin</artifactId>
                    <version>0.8.2</version>
                    <executions>
                        <execution>
                            <id>prepare-agent</id>
                            <goals>
                                <goal>prepare-agent</goal>
                            </goals>
                        </execution>
                        <execution>
                            <id>report</id>
                            <phase>prepare-package</phase>
                            <goals>
                                <goal>report</goal>
                            </goals>
                        </execution>
                        <execution>
                            <id>post-unit-test</id>
                            <phase>test</phase>
                            <goals>
                                <goal>report</goal>
                            </goals>
                            <configuration>
                                <dataFile>target/jacoco.exec</dataFile>
                                <outputDirectory>target/jacoco-ut</outputDirectory>
                            </configuration>
                        </execution>
                    </executions>
                </plugin>
                <!-- 测试Plugins end -->
            </plugins>

    </build>

</project>